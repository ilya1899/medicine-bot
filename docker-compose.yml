services:
#  traefik:
#    image: "traefik:v3.4"
#    container_name: "traefik"
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
#    networks:
#      - net
#    command:
#      - "--providers.docker=true"
#      - "--providers.docker.exposedbydefault=false"
#      - "--providers.docker.network=net"
#      - "--entryPoints.web.address=:80"
#    ports:
#      - "80:80"
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#
#  whoami:
#    image: "traefik/whoami"
#    restart: unless-stopped
#    networks:
#      - net
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
#      - "traefik.http.routers.whoami.entrypoints=web"

  alloy:
    container_name: alloy
    image: grafana/alloy:${GRAFANA_ALLOY_VERSION:-v1.8.2}
    ports:
      - 12345:12345
      - 4318:4318
    networks:
      - net
    volumes:
      - ./grafana/config.alloy:/etc/alloy/config.alloy
      - ./logs:/temp/logs
    command: run --server.http.listen-addr=0.0.0.0:12345 --stability.level=experimental  --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki
  loki:
    container_name: loki
    image: grafana/loki:${GRAFANA_LOKI_VERSION:-3.5.0}
    ports:
      - "3100:3100"
    networks:
      - net
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    container_name: grafana
    image: grafana/grafana:${GRAFANA_VERSION:-11.6.1}
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      # - GF_SERVER_ROOT_URL=http://localhost/admin
      # - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - 3000:3000/tcp
    networks:
      - net
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - net

  bot:
    container_name: bot
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - net

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./cert.pem:/var/lib/postgresql/data/cert.pem
      - ./private.pem:/var/lib/postgresql/data/private.pem
    depends_on:
      - db
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: